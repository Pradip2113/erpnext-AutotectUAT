{
 "add_total_row": 0,
 "columns": [],
 "creation": "2023-04-26 22:29:40.395001",
 "disable_prepared_report": 0,
 "disabled": 0,
 "docstatus": 0,
 "doctype": "Report",
 "filters": [],
 "idx": 0,
 "is_standard": "Yes",
 "letter_head": "Autotechnix",
 "modified": "2023-06-13 16:25:10.553001",
 "modified_by": "Administrator",
 "module": "Manufacturing",
 "name": "Material Request Planning Calculation Report",
 "owner": "Administrator",
 "prepared_report": 0,
 "query": "select x.ProductionPlan, x.ProdPlanWarehouse, x.BomItemCode 'ItemCode', x.BomItemName 'ItemName',  \n\n### BOM Required QTY ###\nsum(x.BomplannedQty) 'RequiredBOMQty',\n\n### Available QTY ###\n(select ifnull(sum(tabbin.actual_qty),0) from `tabBin` tabbin where tabbin.item_code = x.BomItemCode AND x.ProdPlanWarehouse = tabbin.warehouse ) 'ActualQTY',\n\n###Virtual Kitting Material ###\nvk.Virtual_Warehouse, ifnull(sum(vk.Alloted_QTY),0) Alloted_QTY, vk.WorkOrder, \n\n#Material to Request QTY. Formula - BOM QTY - Available QTY\ncase when (sum(x.BomplannedQty) - (select ifnull(sum(tabbin.actual_qty),0) from `tabBin` tabbin where tabbin.item_code = x.BomItemCode AND x.ProdPlanWarehouse = tabbin.warehouse ) \n- ifnull(sum(vk.Alloted_QTY),0))\n< 0 then 0 else \n(sum(x.BomplannedQty) - (select ifnull(sum(tabbin.actual_qty),0) from `tabBin` tabbin where tabbin.item_code = x.BomItemCode AND x.ProdPlanWarehouse = tabbin.warehouse ) \n- ifnull(sum(vk.Alloted_QTY),0))\nend 'Material To Request',\n\n### Material Requested QTY ###\n(select ifnull(sum(tabMaterialRequestItem.qty), 0) from `tabMaterial Request Item` tabMaterialRequestItem \n    where tabMaterialRequestItem.production_plan = x.ProductionPlan \n    and tabMaterialRequestItem.material_request_plan_item = x.MatReqItemName ) 'MaterialRequestedQTY' ,\n\n### Material Ordered QTY ###    \n(select ifnull(sum(tabMaterialRequestItem.ordered_qty), 0) from `tabMaterial Request Item` tabMaterialRequestItem \n    where tabMaterialRequestItem.production_plan = x.ProductionPlan \n    and tabMaterialRequestItem.material_request_plan_item = x.MatReqItemName) 'MaterialOrderedQTY',\n\n### Material Received QTY ###\n(select ifnull(sum(tabMaterialRequestItem.received_qty),0) \n    from `tabMaterial Request Item` tabMaterialRequestItem \n    where tabMaterialRequestItem.production_plan = x.ProductionPlan \n    and tabMaterialRequestItem.material_request_plan_item = x.MatReqItemName) 'MaterialReceivedQTY',\n\n### Material Pending to Receive QTY ###\n((select ifnull(sum(tabMaterialRequestItem.ordered_qty), 0) from `tabMaterial Request Item` tabMaterialRequestItem \n    where tabMaterialRequestItem.production_plan = x.ProductionPlan \n    and tabMaterialRequestItem.material_request_plan_item = x.MatReqItemName) - (select ifnull(sum(tabMaterialRequestItem.received_qty),0) \n    from `tabMaterial Request Item` tabMaterialRequestItem \n    where tabMaterialRequestItem.production_plan = x.ProductionPlan \n    and tabMaterialRequestItem.material_request_plan_item = x.MatReqItemName)) 'Material Ordered but Pending to Receive QTY',\n\n### Material to Order ###\nCASE when (select ifnull(sum(tabMaterialRequestItem.qty), 0) from `tabMaterial Request Item` tabMaterialRequestItem \n    where tabMaterialRequestItem.production_plan = x.ProductionPlan \n    and tabMaterialRequestItem.material_request_plan_item = x.MatReqItemName) = 0 \nthen\ncase when (sum(x.BomplannedQty) - (select ifnull(sum(tabbin.actual_qty),0) from `tabBin` tabbin where tabbin.item_code = x.BomItemCode AND x.ProdPlanWarehouse = tabbin.warehouse ) \n- ifnull(sum(vk.Alloted_QTY),0))\n< 0 then 0 else \n(sum(x.BomplannedQty) - (select ifnull(sum(tabbin.actual_qty),0) from `tabBin` tabbin where tabbin.item_code = x.BomItemCode AND x.ProdPlanWarehouse = tabbin.warehouse )\n- ifnull(sum(vk.Alloted_QTY),0))end\nelse\n((select ifnull(sum(tabMaterialRequestItem.qty), 0) from `tabMaterial Request Item` tabMaterialRequestItem \n    where tabMaterialRequestItem.production_plan = x.ProductionPlan \n    and tabMaterialRequestItem.material_request_plan_item = x.MatReqItemName )\n-(select ifnull(sum(tabMaterialRequestItem.ordered_qty), 0) from `tabMaterial Request Item` tabMaterialRequestItem \n    where tabMaterialRequestItem.production_plan = x.ProductionPlan \n    and tabMaterialRequestItem.material_request_plan_item = x.MatReqItemName) ) END 'Material to Order'\n\n### Need to plan QTY ###\n#case when     \n#ifnull(sum(x.BomplannedQty),0) \n#-((select ifnull(sum(tabbin.actual_qty),0) from `tabBin` tabbin where tabbin.item_code = x.BomItemCode AND x.ProdPlanWarehouse = tabbin.warehouse )\n#    + (select ifnull(sum(tabMaterialRequestItem.qty), 0) from `tabMaterial Request Item` tabMaterialRequestItem \n#    where tabMaterialRequestItem.production_plan = x.ProductionPlan \n#    and tabMaterialRequestItem.material_request_plan_item = x.MatReqItemName)\n#    + (select ifnull(sum(tabMaterialRequestItem.received_qty),0) \n#    from `tabMaterial Request Item` tabMaterialRequestItem \n#    where tabMaterialRequestItem.production_plan = x.ProductionPlan \n#    and tabMaterialRequestItem.material_request_plan_item = x.MatReqItemName)) < 0 then 0 else\n#ifnull(sum(x.BomplannedQty),0) \n#-((select ifnull(sum(tabbin.actual_qty),0) from `tabBin` tabbin where tabbin.item_code = x.BomItemCode AND x.ProdPlanWarehouse = tabbin.warehouse )\n#    + (select ifnull(sum(tabMaterialRequestItem.qty), 0) from `tabMaterial Request Item` tabMaterialRequestItem \n#    where tabMaterialRequestItem.production_plan = x.ProductionPlan \n#    and tabMaterialRequestItem.material_request_plan_item = x.MatReqItemName)\n#    + (select ifnull(sum(tabMaterialRequestItem.received_qty),0) \n#    from `tabMaterial Request Item` tabMaterialRequestItem \n#    where tabMaterialRequestItem.production_plan = x.ProductionPlan \n#    and tabMaterialRequestItem.material_request_plan_item = x.MatReqItemName)) END 'NeedToOrderQty'\n\nfrom (\nselect tabProductionPlan.name 'ProductionPlan', tabProductionPlanSalesOrder.sales_order 'Sales_order',\ntabProductionPlanItem.item_code 'ProdPlanItem', tabProductionPlanItem.bom_no 'ProdPlanBOM', tabProductionPlan.for_warehouse 'ProdPlanWarehouse',\ntabbomitem.item_code 'BomItemCode', tabbomitem.item_name 'BomItemName', tabbomitem.qty 'PerBomQty',  (tabbomitem.qty * tabProductionPlanItem.planned_qty) 'BomplannedQty',\ntabMaterialRequestPlanItem.name 'MatReqItemName', tabWorkOrder.name 'WorkOrder'\nfrom `tabProduction Plan` tabProductionPlan\ninner join `tabProduction Plan Sales Order` tabProductionPlanSalesOrder on tabProductionPlanSalesOrder.parent = tabProductionPlan.name\ninner join `tabProduction Plan Item` tabProductionPlanItem on tabProductionPlanItem.parent = tabProductionPlan.name \nand tabProductionPlanItem.sales_order = tabProductionPlanSalesOrder.sales_order\nleft outer join `tabBOM Item` tabbomitem on tabbomitem.parent = tabProductionPlanItem.bom_no\nleft outer join `tabMaterial Request Plan Item`  tabMaterialRequestPlanItem \non tabMaterialRequestPlanItem.parent = tabProductionPlan.name and tabbomitem.item_code = tabMaterialRequestPlanItem.item_code\nleft outer join `tabSales Order` tabSalesOrder on tabSalesOrder.name = tabProductionPlanSalesOrder.sales_order\nleft outer join `tabWork Order` tabWorkOrder on tabWorkOrder.sales_order = tabSalesOrder.name\nwhere tabProductionPlanSalesOrder.sales_order in %(sales_order)s\n) x\nLEFT JOIN `tabBin` tabbin ON tabbin.item_code = x.BomItemCode AND x.ProdPlanWarehouse = tabbin.warehouse\nLEFT JOIN (select SalesOrder, WorkOrder, 'Material Transfer ID', item_code, 'Item Desc', 'Virtual Material Allocation - APL' Virtual_Warehouse,  sum(Alloted_QTY) Alloted_QTY\n            from (\n            select tabSalesOrder.name as SalesOrder, tabWorkOrder.name as WorkOrder, tabStockEntry.name 'Material Transfer ID', \n            tabStockEntryDetail.item_code, tabStockEntryDetail.description 'Item Desc', \n            case when s_warehouse <> 'Virtual Material Allocation - APL' and t_warehouse = 'Virtual Material Allocation - APL' then transfer_qty\n            when s_warehouse = 'Virtual Material Allocation - APL' and t_warehouse <> 'Virtual Material Allocation - APL' then transfer_qty * -1 else 0 END Alloted_QTY\n            from `tabSales Order` tabSalesOrder\n            inner join `tabWork Order` tabWorkOrder on tabWorkOrder.sales_order = tabSalesOrder.name\n            inner join `tabStock Entry` tabStockEntry on tabStockEntry.work_order = tabWorkOrder.name\n            inner join `tabStock Entry Detail` tabStockEntryDetail on tabStockEntryDetail.parent = tabStockEntry.name\n            where tabSalesOrder.name  in %(sales_order)s \n            ) A\n            group by SalesOrder, WorkOrder, 'Material Transfer ID', item_code, 'Item Desc') vk \n    on vk.SalesOrder = x.Sales_order and x.WorkOrder = vk.WorkOrder and vk.item_code = x.BomItemCode\ngroup by x.ProductionPlan, x.ProdPlanWarehouse, x.BomItemCode, x.BomItemName, vk.Virtual_Warehouse, vk.WorkOrder",
 "ref_doctype": "Work Order",
 "report_name": "Material Request Planning Calculation Report",
 "report_script": "",
 "report_type": "Query Report",
 "roles": [
  {
   "role": "Manufacturing User"
  },
  {
   "role": "Stock User"
  }
 ]
}