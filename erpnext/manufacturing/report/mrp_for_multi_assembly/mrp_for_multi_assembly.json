{
 "add_total_row": 1,
 "columns": [],
 "creation": "2023-06-20 17:05:23.830423",
 "disable_prepared_report": 0,
 "disabled": 0,
 "docstatus": 0,
 "doctype": "Report",
 "filters": [],
 "idx": 0,
 "is_standard": "Yes",
 "letter_head": "Autotechnix",
 "modified": "2023-06-20 22:39:57.790881",
 "modified_by": "Administrator",
 "module": "Manufacturing",
 "name": "MRP for Multi Assembly",
 "owner": "Administrator",
 "prepared_report": 0,
 "query": "select x.ProductionPlan, x.ProdPlanWarehouse, x.BomItemCode 'ItemCode', x.BomItemName 'ItemName', x.SalesOrder, x.AssemblyWorkOrder, \nsum(x.BomplannedQty) 'RequiredBOMQty',\n(select ifnull(sum(tabbin.actual_qty),0) from `tabBin` tabbin where tabbin.item_code = x.BomItemCode AND x.ProdPlanWarehouse = tabbin.warehouse ) 'ActualQTY',\nvk.Virtual_Warehouse, ifnull(sum(vk.Alloted_QTY),0) Alloted_QTY, vk.WorkOrder, \ncase when (sum(x.BomplannedQty) - (select ifnull(sum(tabbin.actual_qty),0) from `tabBin` tabbin where tabbin.item_code = x.BomItemCode AND x.ProdPlanWarehouse = tabbin.warehouse ) \n- ifnull(sum(vk.Alloted_QTY),0))\n< 0 then 0 else \n(sum(x.BomplannedQty) - (select ifnull(sum(tabbin.actual_qty),0) from `tabBin` tabbin where tabbin.item_code = x.BomItemCode AND x.ProdPlanWarehouse = tabbin.warehouse ) \n- ifnull(sum(vk.Alloted_QTY),0))\nend 'Material To Request',\n(select ifnull(sum(tabMaterialRequestItem.qty), 0) from `tabMaterial Request Item` tabMaterialRequestItem \n    where tabMaterialRequestItem.production_plan = x.ProductionPlan \n    and tabMaterialRequestItem.material_request_plan_item = x.MatReqItemName ) 'MaterialRequestedQTY' ,\n(select ifnull(sum(tabMaterialRequestItem.ordered_qty), 0) from `tabMaterial Request Item` tabMaterialRequestItem \n    where tabMaterialRequestItem.production_plan = x.ProductionPlan \n    and tabMaterialRequestItem.material_request_plan_item = x.MatReqItemName) 'MaterialOrderedQTY',\n(select ifnull(sum(tabMaterialRequestItem.received_qty),0) \n    from `tabMaterial Request Item` tabMaterialRequestItem \n    where tabMaterialRequestItem.production_plan = x.ProductionPlan \n    and tabMaterialRequestItem.material_request_plan_item = x.MatReqItemName) 'MaterialReceivedQTY',\n((select ifnull(sum(tabMaterialRequestItem.ordered_qty), 0) from `tabMaterial Request Item` tabMaterialRequestItem \n    where tabMaterialRequestItem.production_plan = x.ProductionPlan \n    and tabMaterialRequestItem.material_request_plan_item = x.MatReqItemName) - (select ifnull(sum(tabMaterialRequestItem.received_qty),0) \n    from `tabMaterial Request Item` tabMaterialRequestItem \n    where tabMaterialRequestItem.production_plan = x.ProductionPlan \n    and tabMaterialRequestItem.material_request_plan_item = x.MatReqItemName)) 'Material Ordered but Pending to Receive QTY',\nCASE when (select ifnull(sum(tabMaterialRequestItem.qty), 0) from `tabMaterial Request Item` tabMaterialRequestItem \n    where tabMaterialRequestItem.production_plan = x.ProductionPlan \n    and tabMaterialRequestItem.material_request_plan_item = x.MatReqItemName) = 0 \nthen\ncase when (sum(x.BomplannedQty) - (select ifnull(sum(tabbin.actual_qty),0) from `tabBin` tabbin where tabbin.item_code = x.BomItemCode AND x.ProdPlanWarehouse = tabbin.warehouse ) \n- ifnull(sum(vk.Alloted_QTY),0))\n< 0 then 0 else \n(sum(x.BomplannedQty) - (select ifnull(sum(tabbin.actual_qty),0) from `tabBin` tabbin where tabbin.item_code = x.BomItemCode AND x.ProdPlanWarehouse = tabbin.warehouse )\n- ifnull(sum(vk.Alloted_QTY),0))end\nelse\n((select ifnull(sum(tabMaterialRequestItem.qty), 0) from `tabMaterial Request Item` tabMaterialRequestItem \n    where tabMaterialRequestItem.production_plan = x.ProductionPlan \n    and tabMaterialRequestItem.material_request_plan_item = x.MatReqItemName )\n-(select ifnull(sum(tabMaterialRequestItem.ordered_qty), 0) from `tabMaterial Request Item` tabMaterialRequestItem \n    where tabMaterialRequestItem.production_plan = x.ProductionPlan \n    and tabMaterialRequestItem.material_request_plan_item = x.MatReqItemName) ) END 'Material to Order'\n\nfrom (\nselect tabProductionPlan.name 'ProductionPlan', tabProductionPlanSalesOrder.sales_order 'SalesOrder',\nppit.ItemCode 'ProdPlanItem', ppit.MainBOM 'ProdPlanBOM', tabProductionPlan.for_warehouse 'ProdPlanWarehouse',\nppit.ItemCode 'BomItemCode', ppit.ItemName 'BomItemName', ppit.StockQTY 'PerBomQty',  ppit.StockQTY 'BomplannedQty',\ntabMaterialRequestPlanItem.name 'MatReqItemName', tabWorkOrder.name 'WorkOrder', ppit.WorkOrder as 'AssemblyWorkOrder'\nfrom `tabProduction Plan` tabProductionPlan\ninner join `tabProduction Plan Sales Order` tabProductionPlanSalesOrder on tabProductionPlanSalesOrder.parent = tabProductionPlan.name\n\n\nleft outer join (select tabSalesOrderItem.parent as SalesOrder, tabSalesOrderItem.bom_no as MainBOM, tabBOMExplosionItem.item_code ItemCode, tabBOMExplosionItem.item_name ItemName, \n                tabBOMExplosionItem.stock_qty as StockQTY, tabBOMExplosionItem.stock_uom as StockUOM, tabProductionPlanSalesOrder.parent as ProductionPlan, wox.WorkOrder as WorkOrder\n                from `tabSales Order` tabSalesOrder\n                inner join `tabSales Order Item` tabSalesOrderItem on tabSalesOrderItem.parent = tabSalesOrder.name\n                inner join `tabBOM Explosion Item` tabBOMExplosionItem on tabBOMExplosionItem.parent = tabSalesOrderItem.bom_no\n                inner join `tabProduction Plan Sales Order` tabProductionPlanSalesOrder on tabProductionPlanSalesOrder.sales_order = tabSalesOrder.name\n                left outer join (select  tabWorkOrder.name as WorkOrder, tabWorkOrder.production_plan ProductionPlan, tabWorkOrderItem.item_code \n                                    from `tabWork Order` tabWorkOrder\n                                    inner join `tabWork Order Item` tabWorkOrderItem on tabWorkOrderItem.parent = tabWorkOrder.name\n                                    where tabWorkOrder.docstatus <> 2 \n                                    ) wox on wox.ProductionPlan = tabProductionPlanSalesOrder.parent and wox.item_code = tabBOMExplosionItem.item_code\n                where tabSalesOrder.name in %(sales_order)s and tabSalesOrder.docstatus <> 2 or tabProductionPlanSalesOrder.parent in %(production_plan)s) ppit\n        on ppit.SalesOrder = tabProductionPlanSalesOrder.sales_order and ppit.ProductionPlan = tabProductionPlan.name \nleft outer join `tabMaterial Request Plan Item`  tabMaterialRequestPlanItem \non tabMaterialRequestPlanItem.parent = tabProductionPlan.name and ppit.ItemCode = tabMaterialRequestPlanItem.item_code\nleft outer join `tabSales Order` tabSalesOrder on tabSalesOrder.name = tabProductionPlanSalesOrder.sales_order\nleft outer join `tabWork Order` tabWorkOrder on tabWorkOrder.sales_order = tabSalesOrder.name\nwhere tabProductionPlanSalesOrder.sales_order in %(sales_order)s\n) x\nLEFT JOIN `tabBin` tabbin ON tabbin.item_code = x.BomItemCode AND x.ProdPlanWarehouse = tabbin.warehouse\nLEFT JOIN (select SalesOrder, WorkOrder, ProductionPlan, 'Material Transfer ID', item_code, 'Item Desc', 'Virtual Material Allocation - APL' Virtual_Warehouse,  sum(Alloted_QTY) Alloted_QTY\n            from (\n            select tabProductionPlanSalesOrder.sales_order as SalesOrder, tabWorkOrder.name as WorkOrder, tabStockEntry.name 'Material Transfer ID', \n            tabStockEntryDetail.item_code, tabStockEntryDetail.description 'Item Desc', tabWorkOrder.production_plan ProductionPlan,\n            case when s_warehouse <> 'Virtual Material Allocation - APL' and t_warehouse = 'Virtual Material Allocation - APL' then transfer_qty\n            when s_warehouse = 'Virtual Material Allocation - APL' and t_warehouse <> 'Virtual Material Allocation - APL' then transfer_qty * -1 else 0 END Alloted_QTY\n            from `tabWork Order` tabWorkOrder \n            left outer join `tabStock Entry` tabStockEntry on tabStockEntry.work_order = tabWorkOrder.name\n            left outer join `tabStock Entry Detail` tabStockEntryDetail on tabStockEntryDetail.parent = tabStockEntry.name\n            left outer join `tabProduction Plan Sales Order` tabProductionPlanSalesOrder \n                on tabProductionPlanSalesOrder.parent = tabWorkOrder.production_plan\n            where tabWorkOrder.docstatus <> 2 \n            and tabProductionPlanSalesOrder.sales_order in  \n             %(sales_order)s\n           \n            ) A\n            group by SalesOrder, WorkOrder, 'Material Transfer ID', item_code, 'Item Desc', ProductionPlan) vk \n    on vk.SalesOrder = x.SalesOrder and x.AssemblyWorkOrder = vk.WorkOrder and vk.item_code = x.BomItemCode\ngroup by x.ProductionPlan, x.ProdPlanWarehouse, x.BomItemCode, x.BomItemName, vk.Virtual_Warehouse, vk.WorkOrder",
 "ref_doctype": "Work Order",
 "report_name": "MRP for Multi Assembly",
 "report_script": "",
 "report_type": "Query Report",
 "roles": [
  {
   "role": "Manufacturing User"
  },
  {
   "role": "Stock User"
  }
 ]
}